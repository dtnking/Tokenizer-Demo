/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_TOKENIZER_H
#define _MOCK_TOKENIZER_H

#include "tokenizer.h"
#include "CException.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_tokenizer_Init(void);
void mock_tokenizer_Destroy(void);
void mock_tokenizer_Verify(void);




#define tokenize_IgnoreAndReturn(cmock_retval) tokenize_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void tokenize_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, Token* cmock_to_return);
#define tokenize_ExpectAndReturn(str, cmock_retval) tokenize_CMockExpectAndReturn(__LINE__, str, cmock_retval)
void tokenize_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, TokenizerString* str, Token* cmock_to_return);
typedef Token* (* CMOCK_tokenize_CALLBACK)(TokenizerString* str, int cmock_num_calls);
void tokenize_StubWithCallback(CMOCK_tokenize_CALLBACK Callback);
#define tokenize_ExpectAndThrow(str, cmock_to_throw) tokenize_CMockExpectAndThrow(__LINE__, str, cmock_to_throw)
void tokenize_CMockExpectAndThrow(UNITY_LINE_TYPE cmock_line, TokenizerString* str, CEXCEPTION_T cmock_to_throw);

#endif
